name: Service Deployment


on:
  pull_request:
    types:
      - closed
  push:
    branches:
      - main
      - feat/ci-cd
  

jobs:
  build-publish:
    name: Build and publish Docker image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout closed
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.REGISTRY_USER }} --password-stdin docker.io

    - name: Set Docker BuildKit
      run: export DOCKER_BUILDKIT=1

    - name: Build & Publish Docker Image
      run: |
        docker build \
            --build-arg ENVIRONMENT=${{ secrets.PRODUCTION }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --build-arg DB_URL=${{ secrets.DB_URL }} \
            --build-arg DB_USERNAME=${{ secrets.DB_USERNAME }} \
            --build-arg SECRET_KEY=${{ secrets.SECRET_KEY }} \
            -t ${{ secrets.REGISTRY_USER }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }} \
            .  
        docker push ${{ secrets.REGISTRY_USER }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }}


  deploy:
    name: Deploy to service to GCP Compute Engine instance
    runs-on: ubuntu-latest
    needs: build-publish
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install SSH client
        run: sudo apt-get install openssh-client

      - name: Export SSH key
        run: echo "${{ secrets.SSH_KEY }}" > ssh-key.pem

      - name: Update SSH key permissions
        run: chmod 400 ssh-key.pem

      - name: Deploy to VM
        run: |
          ssh -o StrictHostKeyChecking=no -i ssh-key.pem ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_STATIC_IP }} "
            docker container rm -f ${{ secrets.CONTAINER_NAME }} || true &&
            docker image rm -f ${{ secrets.REGISTRY_USER }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }} || true &&
            docker run --name ${{ secrets.CONTAINER_NAME }} -d -p 80:8000 ${{ secrets.REGISTRY_USER }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }}"